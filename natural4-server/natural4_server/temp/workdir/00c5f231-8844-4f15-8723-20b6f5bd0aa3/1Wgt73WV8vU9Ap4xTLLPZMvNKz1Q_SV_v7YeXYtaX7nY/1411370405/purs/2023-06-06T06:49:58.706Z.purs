

-- This file was automatically generated by natural4.
-- Do not edit by hand.
-- Instead, revise the toolchain starting at smucclaw/dsl/lib/haskell/natural4/app/Main.hs

module RuleLib.PDPADBNO where

import Prelude
import Data.Either
import Data.Maybe
import Data.Tuple
import Data.Map as Map
import Foreign.Object as Object

import AnyAll.Types

schedule1_part1 :: Item String
schedule1_part1 =

   All
    ( Pre "all of:" ) []



schedule1_part1_nl :: NLDict
schedule1_part1_nl =
  Map.fromFoldable
    [ ]
    

nl4chi :: Object.Object (Item String)
nl4chi = Object.fromFoldable [ Tuple "Person"
    ( Leaf "Person Qualifies" )
, Tuple "Qualifies"
    ( All
        ( Pre "all of:" ) []
    )
]
nl4chiMarking :: Marking
nl4chiMarking = Marking $ Map.fromFoldable []

nl4eng :: Object.Object (Item String)
nl4eng = Object.fromFoldable [ Tuple "Person"
    ( Leaf "Person Qualifies" )
, Tuple "Qualifies"
    ( All
        ( Pre "all of:" ) []
    )
]
nl4engMarking :: Marking
nl4engMarking = Marking $ Map.fromFoldable []

nl4may :: Object.Object (Item String)
nl4may = Object.fromFoldable [ Tuple "Person"
    ( Leaf "Person Qualifies" )
, Tuple "Qualifies"
    ( All
        ( Pre "all of:" ) []
    )
]
nl4mayMarking :: Marking
nl4mayMarking = Marking $ Map.fromFoldable []

allLang = ["nl4chi", "nl4eng", "nl4may"]